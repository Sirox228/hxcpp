<xml>

<set name="HXCPP_CPP11" value="1" if="NDKV9+ || NDKV10+" unless="HXCPP_NO_CPP11" />

<!-- Set architecture -->
<section if="HXCPP_X86">
  <set name="ARCH" value="-x86" />
  <set name="PLATFORM_NUMBER" value="16" />
  <set name="EXEPREFIX" value="i686-linux-android" />
</section>

<section if="HXCPP_X86_64">
  <set name="ARCH" value="-x86_64" />
  <set name="PLATFORM_NUMBER" value="21" />
  <set name="EXEPREFIX" value="x86_64-linux-android" />
</section>

<section if="HXCPP_ARMV7">
  <set name="ARCH" value="-v7" />
  <set name="PLATFORM_NUMBER" value="16" />
  <set name="EXEPREFIX" value="armv7a-linux-androideabi" />
</section>

<section if="HXCPP_ARM64">
  <set name="ARCH" value="-64"/>
  <set name="PLATFORM_NUMBER" value="21" />
  <set name="EXEPREFIX" value="aarch64-linux-android" />
</section>

<error value="Please set one of the architectures, eg HXCPP_ARM64, HXCPP_X86, ..." unless="EXEPREFIX" />

<set name="PLATFORM" value="android-${PLATFORM_NUMBER}" />
<set name="ANDROID_PLATFORM_DEFINE" value="HXCPP_ANDROID_PLATFORM=${PLATFORM_NUMBER}" />
     
<path name="${ANDROID_NDK_ROOT}/toolchains/llvm/prebuilt/${ANDROID_HOST}/bin" />

<set name="HXCPP_AR" value="llvm-ar" />

<!-- <include name="toolchain/gcc-toolchain.xml"/> -->

<compiler id="android-clang" exe="clang++">

  <exe name="clang++" />
  <flag value="--target=${EXEPREFIX}${PLATFORM_NUMBER}" />
  
  <!-- File Related -->
  <include name="toolchain/common-defines.xml" />
  <flag value="-I${HXCPP}/include"/>
  <flag value="--sysroot=${ANDROID_NDK_ROOT}/toolchains/llvm/prebuilt/${ANDROID_HOST}/sysroot"/>
  <flag value="-I${ANDROID_NDK_ROOT}/sources/cxx-stl/llvm-libc++/include"/>
  <flag value="-I${ANDROID_NDK_ROOT}/sources/cxx-stl/llvm-libc++abi/include"/>
  <flag value="-I${ANDROID_NDK_ROOT}/sources/cxx-stl/system/include"/>
  <objdir value="obj/android${OBJEXT}${ARCH}" />
  <ext value=".obj"/>
  
  <section unless="HXCPP_X86">

    <section if="HXCPP_ARM64">
       <flag value="-DHXCPP_ARM64"  />
    </section>
    <section if="HXCPP_ARMV7">
       <flag value="-DHXCPP_ARMV7"  />
       <flag value="-march=armv7-a"  />
       <flag value="-mfpu=vfpv3-d16"  />
       <flag value="-mfloat-abi=softfp" />
    </section>
    <section unless="HXCPP_ARMV7 || HXCPP_ARM64">
       <flag value="-DHXCPP_ARMV5" />
       <flag value="-D__ARM_ARCH_5__"/>
       <flag value="-D__ARM_ARCH_5T__"/>
       <flag value="-D__ARM_ARCH_5E__"/>
       <flag value="-D__ARM_ARCH_5TE__"/>
       <flag value="-march=armv5te" />
       <flag value="-mtune=xscale" />
       <flag value="-msoft-float" />
    </section>
  </section>
  <section if="HXCPP_X86">
    <flag value="-DANDROID_X86"/>
  </section>

  <pchflag value="-x" />
  <pchflag value="c++-header" />
  
  <!-- Macros -->
  <flag value="-DANDROID=ANDROID"/>
  <flag value="-DHX_ANDROID"/>
  <flag value="-DHXCPP_LOAD_DEBUG" if="HXCPP_LOAD_DEBUG"/>
  <flag value="-D${ANDROID_PLATFORM_DEFINE}"/>
  
  <!-- Options -->
  <flag value="-flto" if="HXCPP_OPTIMIZE_LINK" unless="debug"/>
  <flag value="-fvisibility=hidden"/>
  <flag value="-ffunction-sections"/>
  <flag value="-fstack-protector"/>
  <flag value="-fexceptions"/>
  <flag value="-g" if="HXCPP_DEBUG_LINK"/>
  <flag value="-c"/>
  <flag value="-fpic"/>
  <flag value="-O2" unless="debug"/>
  <flag value="-funwind-tables"/>
  <flag value="-fstack-protector"/>
  <flag value="-fno-short-enums"/>
  <flag value="-Wno-overflow" />
  <cppflag value="-Wno-invalid-offsetof" />
  <cppflag value="-frtti"/>
  <flag value="-D_LINUX_STDDEF_H "/> <!-- Avoid compiler including 2 version of file -->
  <flag value="-Wno-psabi" />
  <cppflag value="-std=c++11" if="HXCPP_CPP11"/>
  <flag value="-DHXCPP_CPP11" if="HXCPP_CPP11"/>
  <flag value="-fomit-frame-pointer"/>
  <flag value="-fexceptions"/>
  <flag value="-fno-strict-aliasing"/>
  <flag value="-finline-limit=10000"/>
  <flag value="-Wa,--noexecstack"/>
  <flag value="-O0" if="debug"/>
  <flag value="-DNDEBUG"/>
  <flag value="-DHXCPP_LOAD_DEBUG" if="HXCPP_LOAD_DEBUG"/>
  <outflag value="-o"/>
  
  <!-- Warning Supression -->
  <flag value="-Wno-invalid-offsetof" />
  <flag value="-Wno-return-type-c-linkage" />
  <flag value="-Wno-parentheses" />
</compiler>


<linker id="dll" exe="clang++" >

  <exe name="clang++" />
  <flag value ="-shared" />
  <flag value="--target=${EXEPREFIX}${PLATFORM_NUMBER}" />

  <flag value ="-static-libstdc++" />
  <flag value ="-v" />
  <prefix value="lib"/>
  <lib name="-llog"/>
    
</linker>
    
</xml>
